sudo apt update
sudo apt install -y mongodb

sudo systemctl status mongodb
or service mongodb status

sudo systemctl start mongod
or service mongodb start

sudo systemctl stop mongod  or
service mongodb stop
mongod --port 27017 --dbpath <path> --logpath <path>

mongo --port


---docker---
docker run --name mongo -p 27017:27017 -d mongo

docker exec -it mongo bash

docker exec -it mongo mongo

-------------------------------------------
use db_name

db.roles()

show dbs

db.dropDatabase()

db.createCollection("users")

db.users.count()

db.users.remove({})

db.users.drop()

show collections
-------------------------------------------
db.collection.createIndex({field:1},{unique:true})

db.collection.createIndex({"user.username":1,"user.code_cart":1},{unique:true})

-------------------------------------------
db.users.insertOne({name:"joe"},...)

db.users.insertMany([{...},{...}])

db.users.insert([{...},{...},])
---------------------------------------------
db.users.find()

db.users.findOne({name:'joe'})

db.users.findOne({name:{$exists : true}})

db.users.find({name:{$in { ['joe', 'john']}, .... })

db.users.find({$or:[{name:{$in { ['joe', 'john']}, {age:{$gt:20}} ]})
-------------------------------------------------
db.users.updateOne({name:'joe'}, {$set:{age:10}})

db.users.updateOne({name:'joe'}, {$unset:{age:""}})

db.users.updateOne({name:'joe'}, {$set:{age:10},{upsert:true}})

db.users.updateOne({name:'joe'}, {$set:{'contact.phone':1234566, 'contact.email': 'ggfg@gmsil.com' },{upsert:true}})


db.users.updateMany....

-------------------------------------------------
db.users.deleteOne({name:'joe'})

db.users.deleteMany...
-------------------------------------------------
touch f_name.js
then writing commonds mongodb in file 

use db_name

load('path/f_name.js')
------------------------------------------
db.users.distinict('name')

db.users.find().limit(2)
------------------------------------------
db.users.agrregate(
   {$match:{name:'joe'}},
   {$group:{_id:'_name',
    total:{$sum:'$priceuse db_name}}}
)

db.users.aggregate({$project:{name:1,age:1}})

db.users.aggregate({$sorte:{price:-1}}, {$limit:3})
------------------------------------------
for(i=0;i<3000;i++){
user_id:i,name:'joe'}

db.users.createIndex({user_id:1})

db.users.dropIndex({user_id:1})
-------------------------------------------
db.createUser(
   {
     user: "myusername",
     pwd: passwordPrompt(),  // Or  "<cleartext password>"
     roles: [ "readWrite", "dbAdmin" ],
     passwordDigestor:"server"
   }
)

db.ChangeUserPassword('new_password', 'db_name')

db.auth('usernamr','pwd')

show users
------------------------------------------
go to the one path:

mongodump
mongodump -d db_name

mongorestore
--------------------------PYMONGO-----------------------------
import pymongo

client = pymongo.MongoClient("mongo://localhost:27017/")

db = client["DB_name"]

dblist = client.list_database_names()

col = db["collection"]

collist = db.list_collection_names()

col.insert_one(my_dict)

col.insert_many(list<dict>)

col.find()
col.find({},{"_id": 0})
col.find("field":{"$gt": "<>"} ---> gte,lte,lt,gt
col.fin_one(query)

clo.find().sort("field":1) --->-1

col.delete_one(query)
col.delete_many(query)
col.delete_many({})

col.drop()

col.update_one({"field":{"$rgex":"<>"}, {"$set":{"field":"<>"}) --->$unset
col.update_many(qury, new_value)

col.find().limit(5)
