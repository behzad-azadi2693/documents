ساختار های پیچیده در ۵ دسته ی اصلی در ردیس پشتیبانی می شوند:

1-strings
2-Lists
3-Sets
4-Sorted sets
5-Hashes



#===========================================String==========================================set, get, del
string in python

در واقع ساده ترین نوع داده ای هست که ممکش نیز تنها از آن پشتیبانی می کند.
در واقع وقتی رشته را به عنوان مقدار ذخیره می کنید یک مپ بین رشته و رشته دارید.

اگر یک کلید از قبل تعریف شده باشد و مجدد آن را ست کنید برروی اولی تنها مقدار را جایگزین می کند.

از موارد استفاده این نوع داده ای شاید بتوان ذخیره فایل های 'اچ تی ام ال' را مثال زد
تا با کش کردن آنها بتوان مجدد به آنها دسترسی داشت و دوباره رندر نشوند.

جالب هست که ردیس می تواند تا مقدار 512 مگابایت به ازای هر یک رشته ذخیره کند.



#=========================================List==============================================lpush, lrange, lpop
list in python

این نوع برای داشتن لیستی از رشته ها هست. دقیقا لیستی که شما بتوانید از ابتدا یا انتهای آن مقادیر خود را اضافه و یا کم کنید.

برای مثالی از کاربرد آن و وضوح بیشتر، یک زمان و یا یک تاریخچه چت رو در نظر بگیرید.
باید به تریتب پیام های رد و بدل شده بین ۲ کاربر را نگه دارید و یا برای زمان پست های منتشر شده
توی این لیست تا دلتان می خواهد می تونید مقدار اضافه کنید چون ردیس می تواند بیش از ۴ میلیارد المان در هر لیست نگه داری کند.



#=========================================Sets==============================================sadd, SMEMBERS, srem
set in python

شاید اگر لیستی از رشته ها را بخواهید بسازید از لیست استفاده کنید ولی اگر لیستی بخواهید که

۱-ترتیب در آن مهم نباشد
۲-بخواهید که مقادیر تکراری وارد لیست شما نشوند
۳-از هر کجای لیست که خواستید با سرعت خیلی بالا مقادیر را بگیرید
۴-بررسی کنید که آیا مقداری که دنبال آن هستید در این لیست هست یا خیر باید از ست ها استفاده کنید

در واقع نوع داده ای ست در ردیس برای داشتن یک مجموعه از رشته ها به عنوان مقادیر هست
با این ویژگی مهم که دیگر نیاز به بررسی وجود این مقدار در مجموعه نیست
و هر چند بار که یک مقدار تکراری را به ست اضافه کنیم همان یک مقدار را در مجموعه خودمون داریم.

یکی دیگه از ویژگی های جالب ست این هست که شما می توانید چند تا ست را در ردیس باهم اونیون کنید و از اونها استفاده کنید.

از موارد پر کاربرد ست می توان به محاسبه ی تعداد کاربران یکتای بازدید کننده از سایت اشاره کرد
به این صورت که یک ست از مقادیر 'آی پی' تمام کاربران بازدید کننده داریم
و از آنجایی که این مقادیر تکراری نمی باشد می توان با محاسبه تعداد آنها به بازدید یکتای سایت خود برسیم.

می توانیم بیش از ۴ میلیارد مقدار متفاوت را در یک ‌ست اضافه کنیم



#=========================================SortedSets==============================================zadd, zrang, zrem
collection set in python

همان طور که از اسم این نوع داده مشخص هست شبیه ست هست یعنی یک مجموعه از مقادیر رشته ای بدون تکرار،
اما بر خلاف ست می توان در 'ست مرتب' یک مقدار به عنوان امتیاز به هر المان داد.

با این مقدار می توانیم از کمترین به بیشترین امتیاز المان های خودمون رو مرتب کنیم
و این نکته را هم باید بدونیم که بر خلاف مقادیر المان ها، امتیاز ها می توانند تکراری هم باشند.

برای مثالی از کاربرد این نوع داده می توانیم لیستی از تسک ها را در نظر بگیریم که تکراری نیستند 
و هر کدام یک درجه اهمیتی دارند. حالا می توانیم این لیست را از هر کجایی که نیاز داریم مرتب کنیم.



#=========================================Hashes==============================================hmset, HGETALL, HEXISTS
dictinary in python

آخرین نوع داده ای که در ردیس بررسی میکنیم بسیار می تواند پر کاربرد باشد و البته کار راه انداز!

اگر می خواهید داخل هر کلید یک شی نگه دارید هش دقیقا پاسخ نیاز شماست.

هر هش داخل ردیس این امکان رو به شما می دهد که به ازای هر کلید یک مپ
از رشته هایی به صورت کلیدمقدار را نگه دارید یعنی دقیقا همان چیزی که از شی انتظار دارید.

از موارد کاربرد آن می توان به نگه داشتن اطلاعات کاربران لاگین شده به سیستم اشاره کرد.

فرض کنید به ازای هر کاربری که به سیستم شما لاگین می شود یک کلید از نوع هش بسازید
و داخل آن اطلاعاتی مثل نام، ایمیل، تلفن و هر چیزی که نیاز دارید نگه داری کنید.












